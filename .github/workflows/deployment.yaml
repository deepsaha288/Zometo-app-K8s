name: build analyze, scan
on:
  push:
    branches:
      - main

jobs:
  build-analyze-scan:
    name: build
    runs-on: [self-hosted]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # or the desired version

      - name: Building code and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          # Add SonarQube analysis command here
          echo "Running SonarQube analysis"

      - name: Dependencies install
        run: npm install

      - name: Trivy scan
        run: trivy fs --security-checks vuln,config . > trivy-report.txt

      - name: Docker build and push
        run: |
          docker build -t zometo .
          docker tag zometo deepsaha288/zomato:latest
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push deepsaha288/zomato:latest

      - name: Trivy scan Docker image
        run: trivy image deepsaha288/zomato:latest

  deploy:
    name: Deploy app to Docker
    needs: build-analyze-scan
    runs-on: [self-hosted]
    steps:
      - name: Docker pull
        run: docker pull deepsaha288/zomato:latest

      - name: Trivy scan Docker image
        run: trivy image deepsaha288/zomato:latest

      - name: Run Docker container
        run: docker run -d -p 3000:3000 --name zometo deepsaha288/zomato:latest


      # - name: Configure aws credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      # - name: update-kubeconfig
      #   run: aws eks update-kubeconfig --name Zomato-demo-cluster --region ap-south-1
      # - name: Deploy to kubernetes
      #   run: kubectl apply -f deployment-service.yml
